---
- name: Deploy Node.js Application
  hosts: app1
  become: true

  vars:
    app_package: "{{ app_package }}"
#    deploy_path: "{{ deploy_path }}"
#    node_version: "{{ node_version }}"
#    seed_database: "{{ seed_database | default('false') }}"
#    mongodb_service_name: "mongod" # Adjust if your MongoDB service has a different name

  tasks:
    - name: Update apt cache (if Debian/Ubuntu)
      yum:
        update_cache: yes
        update_only: yes

    - name: Ensure necessary packages are installed (Node.js, npm, MongoDB)
      yum:
        name:
          - nodejs
          - npm
          - mongodb-org # Or mongodb for older versions
        state: present

    - name: Ensure MongoDB service is started and enabled
      service:
        name: mongodb-org
        state: started
        enabled: yes

    - name: Create deployment directory
      ansible.builtin.file:
        path: /home/cloud-user/node
        state: directory

    - name: Copy application package to server
      ansible.builtin.copy:
        src: "{{ app_package }}"
        dest: /home/cloud-user/node
        remote_src: true

    - name: Extract application package
      ansible.builtin.unarchive:
        src: /home/cloud-user/node/app.zip
        dest: /home/cloud-user/node/
        remote_src: yes

    - name: Install Node.js dependencies
      ansible.builtin.command:
        cmd: npm install
        chdir: /home/cloud-user/node
#      become_user: "{{ ansible_user }}"

    - name: Seed the MongoDB database
      ansible.builtin.command:
        cmd: "node init.js"
        chdir: /home/cloud-user/node
#      become_user: "{{ ansible_user }}"
#      when: seed_database == 'true'

    - name: Install pm2 globally
      npm:
        name: pm2
        global: yes

    - name: Start/Restart application with pm2
      ansible.builtin.command:
        cmd: "pm2 restart 0 || pm2 start 0 "
        chdir: /home/cloud-user/node
#      become_user: "{{ ansible_user }}"
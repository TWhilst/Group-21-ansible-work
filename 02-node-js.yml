---
- name: Node.js
  hosts: app2
#  hosts: app1
  become: true

  tasks:
    - name: update all installed packages
      yum:
        update_only: true
        update_cache: true
      become: true

    - name: Download and execute nvm installation script
      shell: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash"
      args:
        creates: ~/.nvm/nvm.sh

    - name: Execute nvm setup commands
      shell: |
        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      register: nvm_output
      changed_when: nvm_output.rc != 0
    - debug:
        var: nvm_output.stdout


#    - name: Check if /usr/local/bin/node exists
#      stat:
#        path: /usr/local/bin/node
#      register: node_bin
#
#    - name: Remove existing Node.js installation in /usr/local if found
#      file:
#        path: /usr/local
#        state: absent
#        recurse: yes
#      when: node_bin.stat.exists
#
#    - name: Remove files and directories from previous tar extraction
#      file:
#        path: /usr/local/node  # Replace with the 'dest' directory from your unarchive task
#        state: absent
#
##    - name: create dir
##      file:
##        path: /usr/local/node  # Replace with the 'dest' directory from your unarchive task
##        state: directory
###        recurse: yes
#
#    - name: Download node.js packages
#      ansible.builtin.get_url:
#        url: https://nodejs.org/dist/v18.20.8/node-v18.20.8-linux-x64.tar.xz
#        dest: /home/centos
#      become: true
#
#    - name: Extract foo.tgz into /var/lib/foo
#      ansible.builtin.unarchive:
#        src: /home/centos/node-v18.20.8-linux-x64.tar.xz
#        dest: /usr/local/
#        remote_src: yes
#        extra_opts: --strip-components=1


#
#
